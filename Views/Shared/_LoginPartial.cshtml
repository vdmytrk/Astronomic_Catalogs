@using Microsoft.AspNetCore.Identity
@inject SignInManager<AspNetUser> SignInManager
@inject UserManager<AspNetUser> UserManager

<ul class="navbar-nav align-items-center gap-3">
    <svg id="theme-toggle" class="" aria-hidden="true" focusable="false" data-prefix="" data-icon="" role="img" xmlns="http://www.w3.org/2000/svg" viewBox=" 0 0 24 24" data-fa-i2svg="">
        <path fill="currentColor" d="M12 6a6 6 0 106 6 6 6 0 00-6-6zm0 11V7a5 5 0 010 10zM12 23.5a.5.5 0 01-.5-.5v-3a.5.5 0 011 0v3a.5.5 0 01-.5.5zM12 4.5a.5.5 0 01-.5-.5V1a.5.5 0 011 0v3a.5.5 0 01-.5.5zM23 12.5h-3a.5.5 0 010-1h3a.5.5 0 010 1zM4 12.5H1a.5.5 0 010-1h3a.5.5 0 010 1zM19.78 20.28a.51.51 0 01-.36-.15L17.3 18a.5.5 0 01.7-.7l2.12 2.12a.5.5 0 010 .71.49.49 0 01-.34.15zM6.34 6.84A.52.52 0 016 6.7L3.87 4.58a.5.5 0 11.71-.71L6.7 6a.51.51 0 010 .71.54.54 0 01-.36.13zM4.22 20.28a.49.49 0 01-.35-.15.5.5 0 010-.71L6 17.3a.5.5 0 11.7.7l-2.12 2.13a.51.51 0 01-.36.15zM17.66 6.84a.54.54 0 01-.36-.14.51.51 0 010-.71l2.12-2.12a.5.5 0 01.71.71L18 6.7a.52.52 0 01-.34.14z"></path>
    </svg>
    @if (SignInManager.IsSignedIn(User))
    {
        var avatarUrl = User.Claims.FirstOrDefault(c => c.Type == "profile_picture")?.Value;
        if(avatarUrl != null)
        {
            avatarUrl = avatarUrl.Replace("s96-c", "s256-c");            
        }
        var displayName = User.Identity?.Name ?? "";
        displayName = displayName.Split('@')[0];

        @if (!string.IsNullOrEmpty(avatarUrl))
        {
            <li class="nav-item">
                <a class="nav-link d-flex align-items-center gap-2" asp-area="Identity" asp-page="/Account/Manage/Index">
                    <img id="userAvatar" src="@avatarUrl" alt="Profile Picture" class="rounded-circle identityStyle" />
                    <span>Hello @displayName!</span>
                </a>
            </li>
        }
        else
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @displayName!</a>
            </li>
        }

        <li class="nav-item">
            <form class="form-inline d-inline-block" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>

<script>
    // Save the avatar into the cache.
    window.addEventListener('DOMContentLoaded', function () {
        const avatarElement = document.getElementById('userAvatar');
        if (!avatarElement) {
            console.warn('Avatar element is not found in the DOM');
            return;
        }

        const avatarUrl = avatarElement.src;
        if (!avatarUrl) {
            console.error('Avatar URL is not available');
            return;
        }

        const avatarCacheKey = 'userAvatar';
        const cachedAvatar = localStorage.getItem(avatarCacheKey);

        if (cachedAvatar) {
            document.getElementById('userAvatar').src = cachedAvatar;
        } else {
            const img = new Image();
            img.src = avatarUrl;

            img.onload = function () {
                localStorage.setItem(avatarCacheKey, avatarUrl);
            }

            img.onerror = function () {
                console.error('Failed to load avatar');
            }
        }
    });
</script>