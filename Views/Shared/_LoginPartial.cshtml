@using Microsoft.AspNetCore.Identity
@inject SignInManager<AspNetUser> SignInManager
@inject UserManager<AspNetUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        var avatarUrl = User.Claims.FirstOrDefault(c => c.Type == "profile_picture")?.Value;
        avatarUrl = avatarUrl.Replace("s96-c", "s256-c");
        var displayName = User.Identity?.Name ?? "";
        displayName = displayName.Split('@')[0];

        @if (!string.IsNullOrEmpty(avatarUrl))
        {
            <li class="nav-item">
                <a class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index">
                    <img id="userAvatar" src="@avatarUrl" alt="Profile Picture" class="rounded-circle identityStyle" />
                    <span>Hello @displayName!</span>
                </a>
            </li>
        }
        else
        {
            <li class="nav-item">
                <a class="nav-link text-dark identityStyle" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @displayName!</a>
            </li>
        }

        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>

<script>
    // Save the avatar into the cache.
    window.addEventListener('DOMContentLoaded', function () {
        const avatarElement = document.getElementById('userAvatar');
        if (!avatarElement) {
            console.warn('Avatar element is not found in the DOM');
            return;
        }

        const avatarUrl = avatarElement.src;
        if (!avatarUrl) {
            console.error('Avatar URL is not available');
            return;
        }

        const avatarCacheKey = 'userAvatar';
        const cachedAvatar = localStorage.getItem(avatarCacheKey);

        if (cachedAvatar) {
            document.getElementById('userAvatar').src = cachedAvatar;
        } else {
            const img = new Image();
            img.src = avatarUrl;

            img.onload = function () {
                localStorage.setItem(avatarCacheKey, avatarUrl);
            }

            img.onerror = function () {
                console.error('Failed to load avatar');
            }
        }
    });
</script>